{
  "name" : "Continuous Integration",
  "on" : {
    "push" : {
      "paths" : [
        "**"
      ]
    },
    "pull_request" : {
      "paths" : [
        "**"
      ]
    }
  },
  "jobs" : {
    "build-ps2" : {
      "runs-on" : "ubuntu-20.04",
      "timeout-minutes" : 45,
      "env" : {
        "HOMEBREW_NO_ANALYTICS" : "1",
        "HOMEBREW_NO_AUTO_UPDATE" : "1",
        "HOMEBREW_NO_INSTALL_UPGRADE" : "1",
        "HOMEBREW_NO_INSTALL_CLEANUP" : "1",
        "CMAKE_GENERATOR" : "Ninja"
      },
      "steps" : [
        {
          "name" : "Checkout repository",
          "uses" : "actions/checkout@v2",
          "with" : {
            "submodules" : "recursive"
          }
        },
        {
          "name" : "Download toolchain",
          "run" : "curl -LOC - https://github.com/uyjulian/buildroot/releases/download/v2017.2.0-ps2uyj1/mipsel-buildroot-linux-uclibc_sdk-buildroot.tar.gz"
        },
        {
          "name" : "Extract toolchain",
          "run" : "tar -xf mipsel-buildroot-linux-uclibc_sdk-buildroot.tar.gz"
        },
        {
          "name" : "Add toolchain to PATH",
          "run" : "echo \"$(realpath mipsel-buildroot-linux-uclibc_sdk-buildroot)/usr/bin\" >> $GITHUB_PATH"
        },
        {
          "name" : "Download firmware",
          "run" : "curl -LOC - https://github.com/uyjulian/linux-firmware-ps2/releases/download/v3.8.0-uyjtest2/linux-firmware-ps2.tar.gz"
        },
        {
          "name" : "Extract firmware",
          "run" : "tar -xf linux-firmware-ps2.tar.gz"
        },
        {
          "name" : "Copy config",
          "run" : "cp template.config .config"
        },
        {
          "name" : "Make build folder",
          "run" : "mkdir -p .build_ps2"
        },
        {
          "name" : "Make config",
          "run" : "make -j$(getconf _NPROCESSORS_ONLN) ARCH=mips CROSS_COMPILE=mipsel-linux- oldconfig"
        },
        {
          "name" : "Make vmlinux kernel",
          "run" : "make -j$(getconf _NPROCESSORS_ONLN) ARCH=mips CROSS_COMPILE=mipsel-linux- vmlinux"
        },
        {
          "name" : "Strip vmlinux kernel",
          "run" : "mipsel-linux-strip -o .build_ps2/vmlinux.strip vmlinux"
        },
        {
          "name" : "Compress vmlinux kernel",
          "run" : "gzip -c -9 .build_ps2/vmlinux.strip > .build_ps2/vmlinux-v3.8.gz"
        },
        {
          "name" : "Create SDK tarball",
          "run" : "tar -czf output/images/mipsel-buildroot-linux-uclibc_sdk-buildroot.tar.gz --owner=0 --group=0 --numeric-owner --transform='s#^./#mipsel-buildroot-linux-uclibc_sdk-buildroot/#' -C output/host/ ."
        },
        {
          "name" : "Make modules",
          "run" : "make -j$(getconf _NPROCESSORS_ONLN) ARCH=mips CROSS_COMPILE=mipsel-linux- modules"
        },
        {
          "name" : "Make modules root",
          "run" : "mkdir -p .build_ps2/modules_root"
        },
        {
          "name" : "Stage modules",
          "run" : "make -j$(getconf _NPROCESSORS_ONLN) ARCH=mips CROSS_COMPILE=mipsel-linux- INSTALL_MOD_PATH=./.build_ps2/modules_root INSTALL_MOD_STRIP=1 modules_install"
        },
        {
          "name" : "Create modules tarball",
          "run" : "tar -czf .build_ps2/linux-modules-ps2.tar.gz --owner=0 --group=0 --numeric-owner --transform='s#^./#linux-modules-ps2/#' -C ./.build_ps2/modules_root ."
        },
        {
          "name" : "Upload vmlinux artifact",
          "uses" : "actions/upload-artifact@master",
          "with" : {
            "name" : "vmlinux-ps2",
            "path" : ".build_ps2/vmlinux-v3.8.gz"
          }
        },
        {
          "name" : "Upload modules artifact",
          "uses" : "actions/upload-artifact@master",
          "with" : {
            "name" : "modules-ps2",
            "path" : ".build_ps2/linux-modules-ps2.tar.gz"
          }
        }
      ]
    },
    "create-release" : {
      "needs" : [
        "build-ps2"
      ],
      "runs-on" : "ubuntu-20.04",
      "timeout-minutes" : 5,
      "if" : "startsWith(github.ref, 'refs/tags/v')",
      "steps" : [
        {
          "name" : "Download all artifacts",
          "uses" : "actions/download-artifact@v3"
        },
        {
          "name" : "Create release",
          "if" : "startsWith(github.ref, 'refs/tags/v')",
          "uses" : "marvinpinto/action-automatic-releases@latest",
          "with" : {
            "repo_token" : "${{ secrets.GITHUB_TOKEN }}",
            "prerelease" : "${{ contains(github.ref, '-rc') }}",
            "files" : "**/**.gz"
          }
        }
      ]
    }
  }
}
